@page "/yakit/cikis"
@using BMEStokYonetim.Data
@using BMEStokYonetim.Data.Entities
@using Microsoft.EntityFrameworkCore
@using Microsoft.AspNetCore.Components.Forms
@inject IDbContextFactory<ApplicationDbContext> ContextFactory
@inject IUserContextService UserContext
@inject NavigationManager Nav

<h3>Yakıt Çıkışı</h3>

@if (loading)
{
    <div class="alert alert-info">Yükleniyor...</div>
}
else
{
    <EditForm Model="@model" OnValidSubmit="HandleSave">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="row g-3">
            <div class="col-md-4">
                <label>Depo</label>
                <InputSelect class="form-select" @bind-Value="model.SourceWarehouseId">
                    <option value="0">Seçiniz</option>
                    @foreach (var wh in warehouses)
                    {
                        <option value="@wh.Id">@wh.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="col-md-4">
                <label>Ürün</label>
                <InputSelect class="form-select" @bind-Value="model.ProductId">
                    <option value="0">Seçiniz</option>
                    @foreach (var p in products)
                    {
                        <option value="@p.Id">@p.Name</option>
                    }
                </InputSelect>
            </div>

            <div class="col-md-2">
                <label>Miktar</label>
                <InputNumber TValue="int" class="form-control" @bind-Value="model.Quantity" />
            </div>

            <div class="col-md-2">
                <label>Birim</label>
                <input class="form-control" value="@unitText" disabled />
            </div>

            <div class="col-md-4">
                <label>Belge No</label>
                <InputText class="form-control" @bind-Value="model.DocumentNumber" />
            </div>

            <div class="col-md-8">
                <label>Açıklama</label>
                <InputText class="form-control" @bind-Value="model.Description" />
            </div>
        </div>

        <div class="mt-3">
            <button type="submit" class="btn btn-danger">Çıkışı Kaydet</button>
            <button type="button" class="btn btn-secondary" @onclick="GoHome">Panele Dön</button>
        </div>
    </EditForm>
}

@code {
    private bool loading = true;
    private string? unitText = "Litre";
    private List<Warehouse> warehouses = new();
    private List<Product> products = new();
    private MovementInput model = new();

    protected override async Task OnInitializedAsync()
    {
        await using var db = await ContextFactory.CreateDbContextAsync();
        warehouses = await db.Warehouses.Where(w => w.IsActive).ToListAsync();
        products = await db.Products.Where(p => p.IsActive).ToListAsync();
        loading = false;
    }

    private async Task HandleSave()
    {
        await using var db = await ContextFactory.CreateDbContextAsync();
        db.StockMovements.Add(new StockMovement
        {
            ProductId = model.ProductId,
            Quantity = model.Quantity,
            SourceWarehouseId = model.SourceWarehouseId,
            MovementDate = DateTime.Now,
            DocumentNumber = model.DocumentNumber,
            Description = model.Description,
            UserId = UserContext.GetUserId()
        });
        await db.SaveChangesAsync();
    }

    private void GoHome() => Nav.NavigateTo("/");

    private class MovementInput
    {
        public int ProductId { get; set; }
        public int SourceWarehouseId { get; set; }
        public int Quantity { get; set; }
        public string? DocumentNumber { get; set; }
        public string? Description { get; set; }
    }
}
