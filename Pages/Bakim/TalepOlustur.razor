@page "/bakim/talep-olustur"
@using BMEStokYonetim.Data
@using BMEStokYonetim.Data.Entities
@using BMEStokYonetim.Helpers
@using BMEStokYonetim.Services.Iservice
@using Microsoft.AspNetCore.Components.Forms
@using Microsoft.EntityFrameworkCore
@using Microsoft.JSInterop
@inject IMaintenanceService MaintenanceService
@inject IUserContextService UserContext
@inject ApplicationDbContext _context
@inject NavigationManager Nav
@inject IJSRuntime JS

<div class="container-fluid py-4">
    <div class="row">
        <div class="col-lg-8 mx-auto">
            <div class="card shadow">
                <div class="card-header bg-danger text-white">
                    <h4 class="mb-0"><i class="bi bi-exclamation-triangle-fill me-2"></i>Bakƒ±m / Arƒ±za Talebi Olu≈ütur</h4>
                </div>
                <div class="card-body">
                    @if (loading)
                    {
                        <div class="alert alert-info">Y√ºkleniyor...</div>
                    }
                    else
                    {
                        <EditForm Model="maintenance" OnValidSubmit="SaveAsync">
                            <DataAnnotationsValidator />
                            <ValidationSummary class="alert alert-danger" />

                            <div class="row g-3">
                                <!-- Varlƒ±k Se√ßimi -->
                                <div class="col-md-12">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-truck text-primary"></i> Arƒ±zalƒ± Varlƒ±k (Ara√ß/Makine)
                                        <span class="text-danger">*</span>
                                    </label>
                                    <InputSelect class="form-select form-select-lg" @bind-Value="maintenance.AssetId">
                                        <option value="0">-- Varlƒ±k Se√ßiniz --</option>
                                        @foreach (var asset in assets)
                                        {
                                            <option value="@asset.Id">
                                                @asset.Name
                                                @if (!string.IsNullOrEmpty(asset.PlateNumber))
                                                {
                                                    <text> - üöó @asset.PlateNumber</text>
                                                }
                                                @if (!string.IsNullOrEmpty(asset.SerialNumber))
                                                {
                                                    <text> (S/N: @asset.SerialNumber)</text>
                                                }
                                            </option>
                                        }
                                    </InputSelect>
                                    @if (maintenance.AssetId == 0)
                                    {
                                        <small class="text-danger">‚ö†Ô∏è L√ºtfen arƒ±zalƒ± varlƒ±ƒüƒ± se√ßiniz</small>
                                    }
                                </div>

                                <!-- Arƒ±za Kategorisi -->
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-tag text-warning"></i> Arƒ±za Kategorisi
                                    </label>
                                    <InputSelect class="form-select" @bind-Value="selectedCategory">
                                        <option value="">-- Kategori Se√ßiniz --</option>
                                        @foreach (FaultCategory cat in Enum.GetValues(typeof(FaultCategory)))
                                        {
                                            <option value="@cat">@cat.GetDescription()</option>
                                        }
                                    </InputSelect>
                                </div>

                                <!-- Arƒ±za Kodu -->
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-code-square text-info"></i> Arƒ±za Kodu (Opsiyonel)
                                    </label>
                                    <InputSelect class="form-select" @bind-Value="maintenance.FaultCodeId">
                                        <option value="">-- Arƒ±za Kodu Se√ßiniz --</option>
                                        @foreach (var fc in filteredFaultCodes)
                                        {
                                            <option value="@fc.Id">[@fc.Code] @fc.Name</option>
                                        }
                                    </InputSelect>
                                    @if (!filteredFaultCodes.Any() && !string.IsNullOrEmpty(selectedCategory))
                                    {
                                        <small class="text-muted">Bu kategoride arƒ±za kodu bulunamadƒ±</small>
                                    }
                                </div>

                                <!-- √ñncelik -->
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-flag-fill text-danger"></i> √ñncelik Durumu
                                        <span class="text-danger">*</span>
                                    </label>
                                    <InputSelect class="form-select" @bind-Value="priority">
                                        @foreach (BakimOncelik oncelik in Enum.GetValues(typeof(BakimOncelik)))
                                        {
                                            <option value="@oncelik">@oncelik.GetDescription()</option>
                                        }
                                    </InputSelect>
                                </div>

                                <!-- Bakƒ±m T√ºr√º -->
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-gear-fill text-success"></i> Bakƒ±m T√ºr√º
                                    </label>
                                    <InputSelect class="form-select" @bind-Value="maintenanceType">
                                        @foreach (BakimTuru tur in Enum.GetValues(typeof(BakimTuru)))
                                        {
                                            <option value="@tur">@tur.GetDescription()</option>
                                        }
                                    </InputSelect>
                                </div>

                                <!-- Arƒ±za A√ßƒ±klamasƒ± -->
                                <div class="col-md-12">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-chat-left-text text-primary"></i> Arƒ±za A√ßƒ±klamasƒ±
                                        <span class="text-danger">*</span>
                                    </label>
                                    <InputTextArea class="form-control" rows="5" @bind-Value="maintenance.Description"
                                                   placeholder="Arƒ±zanƒ±n detaylƒ± a√ßƒ±klamasƒ±&#10;- Ne zaman fark edildi?&#10;- Hangi belirtiler var?&#10;- Ara√ß/makine √ßalƒ±≈üƒ±yor mu?&#10;- Daha √∂nce benzer sorun ya≈üandƒ± mƒ±?" />
                                    <small class="text-muted">
                                        <i class="bi bi-info-circle"></i> Arƒ±zayƒ± olabildiƒüince detaylƒ± a√ßƒ±klayƒ±n. Bu, bakƒ±m ekibinin daha hƒ±zlƒ± √ß√∂z√ºm bulmasƒ±na yardƒ±mcƒ± olur.
                                    </small>
                                </div>

                                <!-- Kilometre/Saat Bilgisi -->
                                <div class="col-md-6">
                                    <label class="form-label">
                                        <i class="bi bi-speedometer2"></i> G√ºncel Kilometre
                                    </label>
                                    <InputNumber class="form-control" @bind-Value="currentKm" placeholder="0" />
                                </div>

                                <div class="col-md-6">
                                    <label class="form-label">
                                        <i class="bi bi-clock-history"></i> √áalƒ±≈üma Saati
                                    </label>
                                    <InputNumber class="form-control" @bind-Value="workingHours" placeholder="0" />
                                </div>

                                <!-- Talep Tarihi -->
                                <div class="col-md-6">
                                    <label class="form-label fw-bold">
                                        <i class="bi bi-calendar-event"></i> Talep Tarihi
                                    </label>
                                    <InputDate TValue="DateTime" class="form-control" @bind-Value="maintenance.RequestDate" readonly />
                                </div>

                                <!-- ƒ∞stenilen Tamamlanma Tarihi -->
                                <div class="col-md-6">
                                    <label class="form-label">
                                        <i class="bi bi-calendar-check"></i> ƒ∞stenilen Tamamlanma Tarihi
                                    </label>
                                    <InputDate TValue="DateTime?" class="form-control" @bind-Value="maintenance.PlannedDate" />
                                    <small class="text-muted">Acil durumlar i√ßin belirtin</small>
                                </div>
                            </div>

                            <!-- Butonlar -->
                            <div class="mt-4 d-flex gap-2 justify-content-end">
                                <button type="button" class="btn btn-secondary" @onclick="GoBack">
                                    <i class="bi bi-x-circle me-1"></i> ƒ∞ptal
                                </button>
                                <button class="btn btn-danger btn-lg" type="submit" disabled="@(maintenance.AssetId == 0 || string.IsNullOrWhiteSpace(maintenance.Description))">
                                    <i class="bi bi-check-circle me-1"></i> Talebi G√∂nder
                                </button>
                            </div>
                        </EditForm>
                    }
                </div>
            </div>

            <!-- Bilgilendirme Kartƒ± -->
            <div class="card mt-3 border-info">
                <div class="card-body">
                    <h6 class="text-info"><i class="bi bi-info-circle-fill"></i> Bilgilendirme</h6>
                    <ul class="mb-0">
                        <li>Talebiniz olu≈üturulduktan sonra bakƒ±m y√∂neticisi tarafƒ±ndan deƒüerlendirilecektir.</li>
                        <li>Acil durumlar i√ßin "Acil" veya "Kritik" √∂ncelik se√ßiniz.</li>
                        <li>Talep durumunuzu "Taleplerim" sayfasƒ±ndan takip edebilirsiniz.</li>
                    </ul>
                </div>
            </div>
        </div>
    </div>
</div>

@code {
    private Maintenance maintenance = new();
    private List<Asset> assets = new();
    private List<FaultCode> allFaultCodes = new();
    private bool loading = true;

    private string selectedCategory = "";
    private BakimOncelik priority = BakimOncelik.Normal;
    private BakimTuru maintenanceType = BakimTuru.ArizaOnarimi;
    private int? currentKm;
    private int? workingHours;

    private IEnumerable<FaultCode> filteredFaultCodes =>
        string.IsNullOrEmpty(selectedCategory)
            ? allFaultCodes
            : allFaultCodes.Where(fc => fc.Category == selectedCategory);

    protected override async Task OnInitializedAsync()
    {
        assets = await _context.Assets
            .Where(a => a.IsActive)
            .OrderBy(a => a.Name)
            .ToListAsync();

        allFaultCodes = await MaintenanceService.GetFaultCodesAsync(onlyActive: true);

        maintenance.Status = BakimDurumu.TalepOlusturuldu;
        maintenance.RequestDate = DateTime.Now;
        maintenance.AssetId = 0;

        loading = false;
    }

    private async Task SaveAsync()
    {
        if (maintenance.AssetId == 0 || string.IsNullOrWhiteSpace(maintenance.Description))
            return;

        var userId = await UserContext.GetCurrentUserIdAsync();

        // √ñncelik ve t√ºr√º a√ßƒ±klamaya ekle (enum desteklenmiyorsa)
        maintenance.Description = $"[{priority.GetDescription()}] [{maintenanceType.GetDescription()}]\n\n{maintenance.Description}";

        if (currentKm.HasValue || workingHours.HasValue)
        {
            maintenance.Description += $"\n\nKM: {currentKm ?? 0} | √áalƒ±≈üma Saati: {workingHours ?? 0}";
        }

        await MaintenanceService.CreateMaintenanceAsync(maintenance, userId ?? "");

        await JS.InvokeVoidAsync("alert", "Talebiniz ba≈üarƒ±yla olu≈üturuldu! Bakƒ±m y√∂neticisi en kƒ±sa s√ºrede deƒüerlendirecektir.");
        Nav.NavigateTo("/bakim/taleplerim");
    }

    private void GoBack() => Nav.NavigateTo("/bakim");
}